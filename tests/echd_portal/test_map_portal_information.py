# Включает в себя тесты из файлов loaderAndMap.json и supportAndInformation.json
from lib import *
import allure
from allure import title, step


el = {
    "Поле ввода логина": s(id="username"),
    "Поле ввода пароля": s(id="password"),
    "Кнопка входа": s("button"),
    "Кнопка информации о портале": s(css="#logo"),
    "Текст формы обучения": s(".widgets-information-panel-text span"),
    "Ссылка на adobe reader": s("[href='http://get.adobe.com/reader/']"),
    "Ссылка на руководство пользователя": s("[href='https://testportal-echd.mos.ru/files/echd_user2019_v.2.pdf']"),
    "Категория информационная безопаность": ss("[href='#']")[2],
    "Подраздел ИБ Обучение и основы ИБ": s("[href='https://sdo.mos.ru/course_activator.html?rs_id=DIT_information_security_ORG&object_id=6467034152214950956&new_session=1']"),
    "Подраздел ИБ Правила ИБ": s("[href='https://testportal-echd.mos.ru/files/information_security_rules.jpg']"),
    "Категория общий видеоролик о функционале портала": s("[href='https://testportal-echd.mos.ru/files/cctv2_12_nN.mp4']"),
    "Категория Видеоролики о новых возможностях": ss("[href='#']")[3],
    "Раздел категории видеороликов о новых возможностях": s("[href='https://testportal-echd.mos.ru/files/echd_release_summer.mp4']"),
    "Категория Видеоролики по тематикам": ss("[href='#']")[4],
    "Раздел 1 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part1.mp4']"),
    "Раздел 2 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part2.mp4']"),
    "Раздел 3 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part3.mp4']"),
    "Раздел 4 категории видеороликов по тематикам": s("[href='https://echd.mos.ru/files/Part4.mp4']"),
    "Раздел 5 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part5.mp4']"),
    "Раздел 6 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part6.mp4']"),
    "Раздел 7 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part7.mp4']"),
    "Раздел 8 категории видеороликов по тематикам": s("[href='https://testportal-echd.mos.ru/files/Part8.mp4']"),
}
variables = {
    "username": "netris_preprod",
    "password": "Nxy2MhG"
}


@allure.feature('Работа с формой информации о портале')
class TestMapPortalInformation(TestCase):

    @title('Авторизуемся на портале')
    def test_1_auth_success(self):
        with step("Вводим логин/пароль и нажимаем кнопку входа на портал"):
            el["Поле ввода логина"].send_keys(variables["username"])
            el["Поле ввода пароля"].send_keys(variables["password"])
            el["Кнопка входа"].click()

    @allure.title('Нажимаем на кнопку открытия информации о портале')
    def test_2_click_info_logo_panel(self):
        el["Кнопка информации о портале"].click()

    @allure.title('Проверяем наличие текста с подсказкой о необходимости установить adobe reader и ссылку на него')
    def test_3_assert_adobe_reader_information(self):
        with step("Проверяем наличие текста с подсказкой о необходимости установить adobe reader"):
            el["Текст формы обучения"].assert_element_text_contains("Для просмотра обучающих материалов потребуется программа просмотра PDF файлов")
        with step("Проверяем наличие ссылки на скачивание adobe reader"):
            el["Ссылка на adobe reader"].assert_element_interaction()

    @allure.title("Проверяем наличие категории и разделы категории 'Информационная безопасность'")
    def test_4_assert_i_s(self):
        with step("Проверяем наличие категории 'Информационная безопаность'"):
            el["Категория информационная безопаность"].assert_element_interaction()
            el["Категория информационная безопаность"].assert_element_text("Информационная безопасность:")
        with step("Проверяем наличие раздела 'Обучение. Основы ИБ' категории 'Информационная безопаность'"):
            el["Подраздел ИБ Обучение и основы ИБ"].assert_element_text("Обучение. Основы ИБ")
        with step("Проверяем наличие раздела 'Правила ИБ' категории 'Информационная безопаность'"):
            el["Подраздел ИБ Правила ИБ"].assert_element_text("Правила ИБ")

    @allure.title("Проверяем раздел обучения 'Руководство пользователя'")
    def test_5_assert_portal_instruction(self):
        el["Ссылка на руководство пользователя"].assert_element_text("Руководство пользователя")

    @allure.title("Проверяем раздел обучения 'Общий видеоролик о функционале портала'")
    def test_6_assert_portal_common_video(self):
        el["Категория общий видеоролик о функционале портала"].assert_element_text("Общий видеоролик о функционале портала")

    @allure.title("Проверяем наличие категории и разделы категории 'Видеоролики о новых возможностях портала'")
    def test_7_assert_new_function_videos(self):
        with step("Проверяем наличие категории 'Видеоролики о новых возможностях портала'"):
            el["Категория Видеоролики о новых возможностях"].assert_element_interaction()
            el["Категория Видеоролики о новых возможностях"].assert_element_text("Видеоролики о новых возможностях портала")
        with step("Раскрываем категорию 'Видеоролики о новых возможностях портала' для проверки разделов категории"):
            el["Категория Видеоролики о новых возможностях"].click()
        with step("Проверяем наличие раздела 'от 05.06.2018' категории 'Видеоролики о новых возможностях портала'"):
            el["Раздел категории видеороликов о новых возможностях"].assert_element_text("от 05.06.2018")
        with step("Сворачиваем категорию 'Видеоролики о новых возможностях портала' для проверки разделов категории"):
            el["Категория Видеоролики о новых возможностях"].click()

    @allure.title("Проверяем наличие категории и разделы категории 'Видеоролики по тематикам'")
    def test_8_assert_function_videos(self):
        with step("Проверяем наличие категории 'Видеоролики по тематикам'"):
            el["Категория Видеоролики по тематикам"].assert_element_interaction()
            el["Категория Видеоролики по тематикам"].assert_element_text("Видеоролики по тематикам")
        with step("Раскрываем категорию 'Видеоролики по тематикам' для проверки разделов категории"):
            el["Категория Видеоролики по тематикам"].click()
        with step("Проверяем наличие раздела 'Начало работы с системой' категории 'Видеоролики по тематикам'"):
            el["Раздел 1 категории видеороликов по тематикам"].assert_element_text("Начало работы с системой")
        with step("Проверяем наличие раздела 'Работа с географической картой' категории 'Видеоролики по тематикам'"):
            el["Раздел 2 категории видеороликов по тематикам"].assert_element_text("Работа с географической картой")
        with step("Проверяем наличие раздела 'Работа с камерами' категории 'Видеоролики по тематикам'"):
            el["Раздел 3 категории видеороликов по тематикам"].assert_element_text("Работа с камерами")
        with step("Проверяем наличие раздела 'Управление положением камер' категории 'Видеоролики по тематикам'"):
            el["Раздел 4 категории видеороликов по тематикам"].assert_element_text("Управление положением камер")
        with step("Проверяем наличие раздела 'Работа с опциями камеры' категории 'Видеоролики по тематикам'"):
            el["Раздел 5 категории видеороликов по тематикам"].assert_element_text("Работа с опциями камеры")
        with step("Проверяем наличие раздела 'Функции управления камерой' категории 'Видеоролики по тематикам'"):
            el["Раздел 6 категории видеороликов по тематикам"].assert_element_text("Функции управления камерой")
        with step("Проверяем наличие раздела 'Дополнительный функционал' категории 'Видеоролики по тематикам'"):
            el["Раздел 7 категории видеороликов по тематикам"].assert_element_text("Дополнительный функционал")
        with step("Проверяем наличие раздела 'События' категории 'Видеоролики по тематикам'"):
            el["Раздел 8 категории видеороликов по тематикам"].assert_element_text("События")
        with step("Сворачиваем категорию 'Видеоролики по тематикам' для проверки разделов категории"):
            el["Категория Видеоролики по тематикам"].click()

    @allure.title('Нажимаем на кнопку закрытия информации о портале')
    def test_9_click_info_logo_close_panel(self):
        el["Кнопка информации о портале"].click()
