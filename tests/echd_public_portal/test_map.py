# Включает в себя тесты из файлов loaderAndMap.json и supportAndInformation.json
from lib import *
import allure
from allure import title, step


el = {
    "Окно плеера": s(".media-container-window", wait=40),
    "Кнопка закрытия плеера": s("[data-player-command='close']", wait=20),
    "Кнопка прокрутки вниз": s("[data-tooltip-hot-key='map.move-south']"),
    "Кнопка прокрутки вверх": s("[data-tooltip-hot-key='map.move-north']"),
    "Кнопка прокрутки влево": s("[data-tooltip-hot-key='map.move-west']"),
    "Кнопка прокрутки вправо": s("[data-tooltip-hot-key='map.move-east']"),
    "Кнопка домашней позиции": s("[data-tooltip-hot-key='map.move-home']"),
    "Кнопка увеличения масштаба": s("[data-tooltip-hot-key='map.zoom-in']"),
    "Кнопка уменьшения масштаба": s("[data-tooltip-hot-key='map.zoom-out']"),
    "Ползунок масштабирования": s(".navigation-slider__zoom-slider"),
    "Полоса масштабирования": s("[data-test-id='hle60t']"),
    "Кнопка закрытия окна камеры": s(css='div.media-container-window .ui-glossy-button.close'),
    "Иконка камеры": s(".camera-marker")
}

body = s(tag_name="body")


@allure.feature('Элементы управления положением карты и наличие камеры на карте')
class TestMap(TestCase):

    @title('Проверяем закрытие плеера')
    def test_1_click_camera_close_button(self):
        """Проверяем закрытие плеера"""

        with step("Нажимаем на кнопку закрытия плеера"):
            el["Кнопка закрытия плеера"].assert_element_interaction()
            el["Кнопка закрытия плеера"].click()
        with step("Проверяем что плеер закрылся"):
            el["Окно плеера"].assert_element_not_existence()

    @title('Проверяем наличие иконки камеры')
    def test_2_camera_icon(self):
        el["Иконка камеры"].assert_element_existence()

    @title("Проверяем кнопку прокрутки карты влево")
    def test_3_button_scroll_left(self):
        """Проверяем кнопку прокрутки карты влево"""

        with step("Проверяем наличие и видимость кнопки прокрутки карты влево"):
            el["Кнопка прокрутки влево"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка прокрутки влево"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки прокрутки карты влево"):
            el["Кнопка прокрутки влево"].assert_hint_text("На запад")

    @title("Проверяем кнопку прокрутки карты вправо")
    def test_4_button_scroll_right(self):
        """Проверяем кнопку прокрутки карты вправо"""

        with step("Проверяем наличие и видимость кнопки прокрутки карты вправо"):
            el["Кнопка прокрутки вправо"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка прокрутки вправо"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки прокрутки карты вправо"):
            el["Кнопка прокрутки вправо"].assert_hint_text("На восток")

    @title("Проверяем кнопку прокрутки карты вверх")
    def test_5_button_scroll_top(self):
        """Проверяем кнопку прокрутки карты вверх"""

        with step("Проверяем наличие и видимость кнопки прокрутки карты вверх"):
            el["Кнопка прокрутки вверх"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка прокрутки вверх"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки прокрутки карты вверх"):
            el["Кнопка прокрутки вверх"].assert_hint_text("На север")

    @title("Проверяем кнопку прокрутки карты вниз")
    def test_6_button_scroll_down(self):
        """Проверяем кнопку прокрутки карты вниз"""

        with step("Проверяем наличие и видимость кнопки прокрутки карты вниз"):
            el["Кнопка прокрутки вниз"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка прокрутки вниз"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки прокрутки карты вниз"):
            el["Кнопка прокрутки вниз"].assert_hint_text("На юг")

    @title("Проверяем кнопку возврата на домашнюю позицию")
    def test_7_button_home(self):
        """Проверяем кнопку возврата на домашнюю позицию"""

        with step("Проверяем наличие и видимость кнопки возврата в домашнюю позицию"):
            el["Кнопка домашней позиции"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка домашней позиции"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки возврата на домашнюю позицию"):
            el["Кнопка домашней позиции"].assert_hint_text("В исходное положение")

    @title("Проверяем кнопку увеличения масштаба")
    def test_8_button_zoom_on(self):
        """Проверяем кнопку увеличения масштаба"""

        with step("Проверяем наличие и видимость кнопки увеличения масштаба"):
            el["Кнопка увеличения масштаба"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка увеличения масштаба"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки увеличение масштаба"):
            el["Кнопка увеличения масштаба"].assert_hint_text("Увеличить масштаб карты")

    @title("Проверяем кнопку уменьшения масштаба")
    def test_9_button_zoom_on(self):
        """Проверяем кнопку уменьшения масштаба"""

        with step("Проверяем наличие и видимость кнопки уменьшения масштаба"):
            el["Кнопка уменьшения масштаба"].assert_element_interaction()
        with step("Осуществляем клик по кнопке"):
            el["Кнопка уменьшения масштаба"].click()
        with step("Проверяем наличие хинта-подсказки у кнопки уменьшения масштаба"):
            el["Кнопка уменьшения масштаба"].assert_hint_text("Уменьшить масштаб карты")

    @title("Проверяем наличие и видимость полосы масштабирования")
    def test_10_scroll_line(self):
        """Проверяем наличие и видимость полосы масштабирования"""

        with step("Проверяем наличие полосы масштабирования"):
            el["Полоса масштабирования"].assert_element_interaction()

    @title("Проверяем наличие и видимость ползунка масштабирования")
    def test_11_scroll_line(self):
        """Проверяем наличие и видимость ползунка масштабирования"""

        with step("Проверяем наличие ползунка масштабирования"):
            el["Ползунок масштабирования"].assert_element_interaction()
